services:
  verisafe:
    build:
      context: .
    container_name: verisafe
    depends_on:
      migrations:
        condition: service_completed_successfully
    environment:
      PORT: 3000
    env_file:
      - ./.env
    ports:
      - "3000:3000"
    networks:
      - verisafe_network
    volumes:
      - uploads:/app/uploads
    restart: always

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5435:5432"
    networks:
      - verisafe_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  migrations:
    image: gomicro/goose:latest
    container_name: verisafe_migrations
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["goose", "up"]
    environment:
      GOOSE_DRIVER: ${GOOSE_DRIVER}
      GOOSE_DBSTRING: ${GOOSE_DBSTRING}
      GOOSE_MIGRATION_DIR: ${GOOSE_MIGRATION_DIR}
    env_file:
      - ./.env
    volumes:
      - ./database/migrations:/app/database/migrations
    networks:
      - verisafe_network
    restart: "no"

networks:
  verisafe_network:
    driver: bridge

volumes:
  postgres_data:
  uploads: