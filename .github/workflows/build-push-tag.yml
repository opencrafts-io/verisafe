name: Build, Test, and Push Verisafe Backend (Prod or Dev)

on:
  push:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: verisafeuser
          POSTGRES_PASSWORD: secretpassword
          POSTGRES_DB: verisafe
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U verisafeuser -d verisafe"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_USER: verisafeuser
      DB_PASSWORD: secretpassword
      DB_NAME: verisafe
      DB_HOST: localhost
      DB_PORT: 5432
      PGUSER: verisafeuser
      PGPASSWORD: secretpassword
      PGDATABASE: verisafe
      PGHOST: localhost
      PGPORT: 5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'
          cache: true

      - name: Run Goose migrations
        run: goose -dir ./migrations postgres "host=localhost port=5432 user=verisafeuser password=secretpassword dbname=verisafe sslmode=disable" up

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test -v ./...

  build-and-push:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pack CLI
        run: |
          curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.38.2/pack-v0.38.2-linux.tgz" | tar -xz
          sudo mv pack /usr/local/bin/pack

      - name: Cache CNB Layers
        uses: actions/cache@v4
        with:
          path: ~/.cache/pack
          key: cnb-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            cnb-${{ runner.os }}-${{ github.ref }}
            cnb-${{ runner.os }}

      - name: Set Docker tags
        id: tags
        run: |
          BRANCH=$(echo "${GITHUB_REF##*/}" | tr '[:upper:]' '[:lower:]' | tr '/' '-')
          SHA=$(git rev-parse --short HEAD)

          if [ "$BRANCH" = "main" ]; then
            IMAGE_TAG="prod"
            IMAGE_BASE="${{ secrets.DOCKERHUB_USERNAME }}/verisafe-backend-prod"
          else
            IMAGE_TAG="dev"
            IMAGE_BASE="${{ secrets.DOCKERHUB_USERNAME }}/verisafe-backend-staging"
          fi

          echo "image_base=$IMAGE_BASE" >> $GITHUB_OUTPUT
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "sha_tag=$SHA" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image with Buildpacks
        run: |
          IMAGE_BASE=${{ steps.tags.outputs.image_base }}
          IMAGE_TAG=${{ steps.tags.outputs.image_tag }}
          SHA_TAG=${{ steps.tags.outputs.sha_tag }}

          echo "ðŸ”¨ Building $IMAGE_BASE:$IMAGE_TAG and $IMAGE_BASE:$SHA_TAG"

          pack build "$IMAGE_BASE:$IMAGE_TAG" \
            --buildpack paketo-buildpacks/go \
            --builder paketobuildpacks/builder-jammy-base
            --cache "type=build;format=volume"

          docker tag "$IMAGE_BASE:$IMAGE_TAG" "$IMAGE_BASE:$SHA_TAG"

      - name: Push Docker images to Docker Hub
        run: |
          IMAGE_BASE=${{ steps.tags.outputs.image_base }}
          IMAGE_TAG=${{ steps.tags.outputs.image_tag }}
          SHA_TAG=${{ steps.tags.outputs.sha_tag }}

          echo "ðŸš€ Pushing $IMAGE_BASE:$IMAGE_TAG"
          docker push "$IMAGE_BASE:$IMAGE_TAG"

          echo "ðŸš€ Pushing $IMAGE_BASE:$SHA_TAG"
          docker push "$IMAGE_BASE:$SHA_TAG"
